{"version":3,"sources":["components/user/UserRow.js","components/user/UserAllPage.js"],"names":["UserRow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","promote","event","preventDefault","id","state","requester","post","response","console","log","success","setState","role","toast","react_default","a","createElement","common","successToast","text","message","position","POSITION","TOP_RIGHT","error","errorToast","catch","err","concat","status","localStorage","clear","history","push","demote","render","className","index","username","userService","checkIfIsRoot","isLoggedInUser","onClick","react_router_dom","to","bind","assertThisInitialized","objectSpread","Component","UserAllPage","userArr","_this2","userId","match","params","get","_this3","getUserToShowId","style","margin","scope","map","user","i","UserRow_UserRow","assign","key"],"mappings":"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","file":"static/js/9.d3cd82f8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { userService, observer, requester } from '../../infrastructure'\r\nimport { toast } from 'react-toastify';\r\nimport { ToastComponent } from '../common'\r\n\r\nexport default class UserRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: '',\r\n            role: '',\r\n            username: ''\r\n        }\r\n\r\n        this.promote = this.promote.bind(this);\r\n        this.demote = this.demote.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({...this.props})\r\n    }\r\n\r\n    promote = (event) => {\r\n        event.preventDefault();\r\n        const id = this.state.id;\r\n        requester.post('/users/promote?id=' + id, id, (response) => {\r\n            console.log(response)\r\n            \r\n            if (response.success) {\r\n                this.setState({role: 'ADMIN'})\r\n                toast.success(<ToastComponent.successToast text={response.message} />, {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else {\r\n                console.log('error message: ', response.message);\r\n                toast.error(<ToastComponent.errorToast text={response.message} />, {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            console.error('Promote err:', err)\r\n            toast.error(<ToastComponent.errorToast text={`Internal Server Error: ${err.message}`} />, {\r\n                // toast.error(<ToastComponent.errorToast text={`${error.name}: ${error.message}`} />, {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n\r\n            if(err.status === 403 && err.message === 'Your JWT token is expired. Please log in!'){\r\n                localStorage.clear();\r\n                this.props.history.push('/login');\r\n            }\r\n        })\r\n    }\r\n\r\n    demote = (event) => {\r\n        event.preventDefault();\r\n        const id = this.state.id;\r\n        requester.post('/users/demote?id=' + id, id, (response) => {\r\n            console.log(response)\r\n            if (response.success) {\r\n                this.setState({role: 'USER'})\r\n                toast.success(<ToastComponent.successToast text={response.message} />, {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else {\r\n                console.log('error message: ', response.message);\r\n                toast.error(<ToastComponent.errorToast text={response.message} />, {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n\r\n        }).catch(err => {\r\n            console.error('Demote err:', err)\r\n            toast.error(<ToastComponent.errorToast text={`Internal Server Error: ${err.message}`} />, {\r\n                // toast.error(<ToastComponent.errorToast text={`${error.name}: ${error.message}`} />, {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n\r\n            if(err.status === 403 && err.message === 'Your JWT token is expired. Please log in!'){\r\n                localStorage.clear();\r\n                this.props.history.push('/login');\r\n            }\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <tr className=\"row\" >\r\n                <td className=\"col-md-1\" >\r\n                    <h5>{this.state.index}</h5>\r\n                </td>\r\n                <td className=\"col-md-3\" >\r\n                    <h5>{this.state.username}</h5>\r\n                </td>\r\n                <td className=\"col-md-3\" >\r\n                    <h5>{this.state.role}</h5>\r\n                </td>\r\n                <td className=\"col-md-5 d-flex justify-content-center\" >\r\n                    {(!userService.checkIfIsRoot(this.state.role) && !userService.isLoggedInUser(this.state.username)) &&\r\n                        <h5>\r\n                            <button className=\"btn App-button-primary btn-lg m-1\" onClick={this.promote} >Promote</button>\r\n                        </h5>}\r\n                    {(!userService.checkIfIsRoot(this.state.role) && !userService.isLoggedInUser(this.state.username)) &&\r\n                        <h5>\r\n                            <button className=\"btn App-button-primary btn-lg m-1\" onClick={this.demote} >Demote</button>\r\n                        </h5>}\r\n                    <h5>\r\n                        <NavLink className=\"btn App-button-primary btn-lg m-1\" to={`/home/profile/${this.state.id}`} role=\"button\">Profile</NavLink>\r\n                    </h5>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport UserRow from './UserRow';\r\nimport { requester, observer } from '../../infrastructure/'\r\nimport { toast } from 'react-toastify';\r\nimport { ToastComponent } from '../common'\r\n\r\nexport default class UserAllPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            userArr: [],\r\n            id: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userId = this.props.match.params.id;\r\n        \r\n        requester.get('/users/all/'+ userId, (response) => {\r\n            console.log('users all: ', response);\r\n            debugger;\r\n            if (response.success === true) {\r\n                toast.success(<ToastComponent.successToast text={response.message} />, {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n                debugger;\r\n                this.setState({\r\n                    userArr: response['payload'],\r\n                    id: userId\r\n                })\r\n            } else {\r\n                toast.error(<ToastComponent.errorToast text={response.message} />, {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            console.error('deatils err:', err)\r\n            toast.error(<ToastComponent.errorToast text={`Internal Server Error: ${err.message}`} />, {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n\r\n            if(err.status === 403 && err.message === 'Your JWT token is expired. Please log in!'){\r\n                localStorage.clear();\r\n                this.props.history.push('/login');\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.props.match.params.id !== this.props.id){\r\n            this.props.getUserToShowId(this.props.match.params.id);\r\n        }\r\n        debugger;\r\n\r\n        return (\r\n            <div className=\"container col-md-12 text-center\">\r\n                <h1 className=\"text-center font-weight-bold display-5\" style={{'margin': '1rem auto'}}>All Users</h1>\r\n                <table className=\"table table-hover mt-3 w-80 mx-auto text-center\">\r\n                    <thead>\r\n                        <tr className=\"row\">\r\n                            <th className=\"col-md-1\" scope=\"col\">#</th>\r\n                            <th className=\"col-md-3\" scope=\"col\">Username</th>\r\n                            <th className=\"col-md-3\" scope=\"col\">Role</th>\r\n                            <th className=\"col-md-5\" scope=\"col\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.userArr.map((user, i) => <UserRow key={user.id} index={i + 1} {...this.props} {...user} />)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}