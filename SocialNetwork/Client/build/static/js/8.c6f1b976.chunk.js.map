{"version":3,"sources":["components/user/FriendRequest.js","components/user/UserFindFriendsPage.js","components/user/Friend.js"],"names":["FriendRequest","props","_this","Object","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","render","state","ready","_this$state","id","firstName","lastName","firstButtonText","secondButtonText","firstButtonLink","secondButtonLink","firstButtonOnClick","secondButtonOnClick","thirdButtonText","thirdButtonLink","thirdButtonOnClick","backgroundImageUrl","default_background_image","profilePicUrl","placeholder_user_image","imgClassName","userService","getImageSize","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","style","backgroundImage","concat","src","alt","onClick","bind","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","username","status","actionUser","setState","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","Component","UserFindFriendsPage","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","addFriend","friendCandidateId","event","preventDefault","requestBody","loggedInUserId","getUserId","requester","post","response","console","log","success","toast","react__WEBPACK_IMPORTED_MODULE_6___default","_common__WEBPACK_IMPORTED_MODULE_9__","successToast","text","message","position","POSITION","TOP_RIGHT","findFriends","userId","category","error","errorToast","catch","err","localStorage","clear","history","push","confirmRequest","friendToAcceptId","rejectRequest","friendToRejectId","friendsCandidatesArr","userWaitingForAcceptingRequest","usersReceivedRequestFromCurrentUser","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","match","params","getUserToShowId","_this2","categoryFromUrl","requests","length","react__WEBPACK_IMPORTED_MODULE_6__","map","friend","_FriendRequest__WEBPACK_IMPORTED_MODULE_11__","assign","key","friendsCandidates","_Friend__WEBPACK_IMPORTED_MODULE_10__","remainCandidates","noResult","isRequestsSearch","margin","Friend"],"mappings":"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","file":"static/js/8.c6f1b976.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { userService } from '../../infrastructure'\r\nimport default_background_image from '../../assets/images/default-background-image.jpg'\r\nimport placeholder_user_image from '../../assets/images/placeholder-profile-male.jpg'\r\n\r\nexport default class FriendRequest extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            profilePicUrl: '',\r\n            backgroundImageUrl: '',\r\n            firstButtonText: '',\r\n            secondButtonText: '',\r\n            firstButtonLink: '',\r\n            secondButtonLink: '',\r\n            firstButtonOnClick: '',\r\n            secondButtonOnClick: '',\r\n            status: '',\r\n            actionUser: '',\r\n            ready: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ ...this.props, ready: true })\r\n    }\r\n\r\n    render = () => {\r\n        if (!this.state.ready) {\r\n            return null;\r\n        }\r\n\r\n        const { id, firstName, lastName, firstButtonText, secondButtonText, firstButtonLink, secondButtonLink,\r\n            firstButtonOnClick, secondButtonOnClick, thirdButtonText, thirdButtonLink, thirdButtonOnClick } = this.state;\r\n\r\n        const backgroundImageUrl = this.state.backgroundImageUrl || default_background_image\r\n        const profilePicUrl = this.state.profilePicUrl || placeholder_user_image\r\n\r\n        let imgClassName = '';\r\n        if (profilePicUrl) {\r\n            imgClassName = userService.getImageSize(profilePicUrl);\r\n        }\r\n\r\n        return (\r\n            <div className=\"friend-container\" style={{ 'backgroundImage': `url(${backgroundImageUrl})` }}>\r\n                <span className=\"friend-img-container\">\r\n                    <img className={imgClassName} src={profilePicUrl} alt=\"Profile pic\" />\r\n                </span>\r\n                <div className=\"friend-content\">\r\n                    <h2 className=\"friend-text-shadow\" >{`${firstName} ${lastName}`}</h2>\r\n                    <div className=\"friend-button-container\">\r\n                        {!firstButtonOnClick\r\n                            ? <button className=\"button update-info\" >\r\n                                <NavLink to={firstButtonLink}>{firstButtonText}</NavLink>\r\n                            </button>\r\n\r\n                            : <button\r\n                                className=\"button update-info\"\r\n                                onClick={firstButtonOnClick.bind(this, id)} >\r\n                                {firstButtonText}\r\n                            </button>\r\n                        }\r\n\r\n                        {!secondButtonOnClick\r\n                            ?\r\n                            <button className=\"button update-info\">\r\n                                <NavLink to={secondButtonLink}>{secondButtonText}</NavLink>\r\n                            </button>\r\n\r\n                            : <button\r\n                                className=\"button update-info\"\r\n                                onClick={secondButtonOnClick.bind(this, id)} >\r\n                                {secondButtonText}\r\n                            </button>\r\n                        }\r\n\r\n                        {!thirdButtonOnClick\r\n                            ?\r\n                            <button className=\"button update-info\">\r\n                                <NavLink to={thirdButtonLink}>{thirdButtonText}</NavLink>\r\n                            </button>\r\n\r\n                            : <button\r\n                                className=\"button update-info\"\r\n                                onClick={thirdButtonOnClick.bind(this, id)} >\r\n                                {secondButtonText}\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport { requester, userService } from '../../infrastructure'\r\nimport { toast } from 'react-toastify';\r\nimport { ToastComponent } from '../common'\r\nimport Friend from './Friend';\r\nimport FriendRequest from './FriendRequest';\r\nimport './css/UserFriends.css'\r\n\r\nexport default class UserFindFriendsPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            friendsCandidatesArr: [],\r\n            userWaitingForAcceptingRequest: [],\r\n            usersReceivedRequestFromCurrentUser: [],\r\n            category: '',\r\n        };\r\n\r\n        this.addFriend = this.addFriend.bind(this);\r\n        this.confirmRequest = this.confirmRequest.bind(this);\r\n        this.rejectRequest = this.rejectRequest.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userId = this.props.match.params.id;\r\n        const category = this.props.match.params.category;\r\n\r\n        this.setState({ category, userId })\r\n        debugger;\r\n        this.props.getUserToShowId(userId);\r\n        this.props.findFriends(userId, category);\r\n    }\r\n\r\n    addFriend = (friendCandidateId, event) => {\r\n        event.preventDefault();\r\n        const requestBody = { loggedInUserId: userService.getUserId(), friendCandidateId: friendCandidateId }\r\n\r\n        requester.post('/relationship/addFriend', requestBody, (response) => {\r\n            console.log('AddFriend response: ', response)\r\n            if (response.success) {\r\n                toast.success(<ToastComponent.successToast text={response.message} />, {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n\r\n                this.props.findFriends(this.state.userId, this.state.category);\r\n\r\n\r\n                // this.props.history.push(\"/home/findFriends/\" + userService.getUserId())\r\n\r\n            } else {\r\n                console.log('error message: ', response.message);\r\n                toast.error(<ToastComponent.errorToast text={response.message} />, {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            console.error('Add Friend err:', err)\r\n            toast.error(<ToastComponent.errorToast text={`Internal Server Error: ${err.message}`} />, {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n\r\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\r\n                localStorage.clear();\r\n                this.props.history.push('/login');\r\n            }\r\n        })\r\n    }\r\n\r\n    confirmRequest = (friendToAcceptId, event) => {\r\n        event.preventDefault();\r\n        const requestBody = { loggedInUserId: userService.getUserId(), friendToAcceptId: friendToAcceptId }\r\n\r\n        requester.post('/relationship/acceptFriend', requestBody, (response) => {\r\n            if (response.success) {\r\n                toast.success(<ToastComponent.successToast text={response.message} />, {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n\r\n                this.props.findFriends(this.state.userId, this.state.category);\r\n            } else {\r\n                console.log('error message: ', response.message);\r\n                toast.error(<ToastComponent.errorToast text={response.message} />, {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            console.error('Remove Friend err:', err)\r\n            toast.error(<ToastComponent.errorToast text={`Internal Server Error: ${err.message}`} />, {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n\r\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\r\n                localStorage.clear();\r\n                this.props.history.push('/login');\r\n            }\r\n        })\r\n    }\r\n\r\n    rejectRequest = (friendToRejectId, event) => {\r\n        event.preventDefault();\r\n        const requestBody = { loggedInUserId: userService.getUserId(), friendToRejectId: friendToRejectId }\r\n        requester.post('/relationship/cancelRequest', requestBody, (response) => {\r\n            console.log('RejectFriend response: ', response)\r\n            if (response.success) {\r\n                toast.success(<ToastComponent.successToast text={response.message} />, {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n\r\n                this.props.findFriends(this.state.userId, this.state.category);\r\n            } else {\r\n                console.log('error message: ', response.message);\r\n                toast.error(<ToastComponent.errorToast text={response.message} />, {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            console.error('Remove Friend err:', err)\r\n            toast.error(<ToastComponent.errorToast text={`Internal Server Error: ${err.message}`} />, {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n\r\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\r\n                localStorage.clear();\r\n                this.props.history.push('/login');\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.match.params.id !== this.props.id) {\r\n            this.props.getUserToShowId(this.props.match.params.id);\r\n        }\r\n\r\n        const categoryFromUrl = this.props.match.params.category\r\n        console.log('categoryFromUrl :', categoryFromUrl)\r\n        console.log('this.props.category :', this.props.category)\r\n\r\n        if(this.props.category !== categoryFromUrl){\r\n            this.props.findFriends(this.state.userId, categoryFromUrl)\r\n        }\r\n\r\n        console.log('props: ', this.props)\r\n\r\n        const requestLength = this.props.userWaitingForAcceptingRequest.length;\r\n        let requests = '';\r\n\r\n        if (requestLength > 0) {\r\n            requests = (\r\n                <Fragment>\r\n                    <h3>Respond to Your Friend Requests</h3>\r\n                    <hr className=\"my-2 mb-5 mt-2 col-md-8 mx-auto\" />\r\n                    {this.props.userWaitingForAcceptingRequest.map((friend) =>\r\n                        <FriendRequest\r\n                            key={friend.id}\r\n                            {...this.props}\r\n                            {...friend}\r\n                            firstButtonText={'CONFIRM'}\r\n                            secondButtonText={'REJECT'}\r\n                            thirdButtonText={'VIEW PROFILE'}\r\n                            firstButtonOnClick={this.confirmRequest}\r\n                            secondButtonOnClick={this.rejectRequest}\r\n                            thirdButtonLink={`/home/profile/${friend.id}`}\r\n                        />)}\r\n                    <hr className=\"my-2 mb-5 mt-3 col-md-12 mx-auto\" />\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        let waitingForResponseUsers = this.props.usersReceivedRequestFromCurrentUser.length;\r\n        let friendsCandidates = '';\r\n\r\n        if (waitingForResponseUsers > 0) {\r\n            friendsCandidates = (\r\n                <Fragment>\r\n                    <h3>Pending Requests</h3>\r\n                    <hr className=\"my-2 mb-5 mt-2 col-md-8 mx-auto\" />\r\n                    {\r\n                        this.props.usersReceivedRequestFromCurrentUser.map((friend) =>\r\n                            <Friend\r\n                                key={friend.id}\r\n                                {...this.props}\r\n                                {...friend}\r\n                                firstButtonLink={`/home/profile/${friend.id}`}\r\n                                secondButtonLink={`/`}\r\n                                firstButtonText={'VIEW PROFILE'}\r\n                                secondButtonText={'CANCEL REQUEST'}\r\n                                secondButtonOnClick={this.rejectRequest}\r\n                            />)\r\n                    }\r\n                    <hr className=\"my-2 mb-5 mt-3 col-md-12 mx-auto\" />\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        let friendsCandidatesArr = this.props.friendsCandidatesArr.length;\r\n        let remainCandidates = '';\r\n\r\n        if (friendsCandidatesArr > 0) {\r\n            remainCandidates = (\r\n                <Fragment>\r\n                    <h3>People You May Know</h3>\r\n                    <hr className=\"my-2 mb-5 mt-3 col-md-8 mx-auto\" />\r\n                    {\r\n                        this.props.friendsCandidatesArr.map((friend) =>\r\n                            <Friend\r\n                                key={friend.id}\r\n                                {...this.props}\r\n                                {...friend}\r\n                                firstButtonLink={`/home/profile/${friend.id}`}\r\n                                secondButtonLink={`/`}\r\n                                firstButtonText={'VIEW PROFILE'}\r\n                                secondButtonText={'ADD FRIEND'}\r\n                                secondButtonOnClick={this.addFriend}\r\n                            />)\r\n\r\n                    }\r\n                    <hr className=\"my-2 mb-5 mt-3 col-md-12 mx-auto\" />\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        let noResult = '';\r\n\r\n        if (!requests && !friendsCandidates && !remainCandidates) {\r\n            noResult = (\r\n                <Fragment>\r\n                    <h2>All registered users are already your friends!</h2>\r\n                    <hr className=\"my-2 mb-5 mt-3 col-md-12 mx-auto\" />\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        const { category } = this.props;\r\n        let isRequestsSearch = category === 'requests';\r\n\r\n        console.log('category: ',  category);\r\n        console.log('isRequestsSearch: ',  isRequestsSearch);\r\n        debugger;\r\n        if (!requests && isRequestsSearch) {\r\n            requests = (\r\n                <Fragment>\r\n                    <h2>There are no friend requests!</h2>\r\n                    <hr className=\"my-2 mb-5 mt-3 col-md-12 mx-auto\" />\r\n                </Fragment>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"container col-md-12 text-center\">\r\n                <h1 className=\"text-center font-weight-bold display-5\" style={{ 'margin': '1rem auto' }}>\r\n                    {category === 'findFriends' ? 'Find Friends' : 'Friend Requests'}\r\n                </h1>\r\n                <hr className=\"my-2 mb-5 mt-3 col-md-12 mx-auto\" />\r\n                <section className=\"friend-section\" >\r\n                    {requests}\r\n                    {!isRequestsSearch && friendsCandidates}\r\n                    {!isRequestsSearch && remainCandidates}\r\n                    {!isRequestsSearch && noResult}\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component, Redirect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { userService } from '../../infrastructure'\r\nimport default_background_image from '../../assets/images/default-background-image.jpg'\r\nimport placeholder_user_image from '../../assets/images/placeholder-profile-male.jpg'\r\n\r\nexport default class Friend extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            profilePicUrl: '',\r\n            backgroundImageUrl: '',\r\n            firstButtonText: '',\r\n            secondButtonText: '',\r\n            firstButtonLink: '',\r\n            secondButtonLink: '',\r\n            firstButtonOnClick: '',\r\n            secondButtonOnClick: '',\r\n            status: '',\r\n            actionUser: '',\r\n            ready: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ ...this.props, ready: true })\r\n    }\r\n\r\n    render = () => {\r\n        if (!this.state.ready) {\r\n            return null;\r\n        }\r\n\r\n        const { id, firstName, lastName, firstButtonText, secondButtonText, firstButtonLink, secondButtonLink,\r\n             firstButtonOnClick, secondButtonOnClick} = this.state;\r\n\r\n        const backgroundImageUrl = this.state.backgroundImageUrl || default_background_image\r\n        const profilePicUrl = this.state.profilePicUrl || placeholder_user_image\r\n\r\n        let imgClassName = '';\r\n        if (profilePicUrl) {\r\n            imgClassName = userService.getImageSize(profilePicUrl);\r\n        }\r\n        \r\n        return (\r\n            <div className=\"friend-container\" style={{ 'backgroundImage': `url(${backgroundImageUrl})` }}>\r\n                <span className=\"friend-img-container\">\r\n                    <img className={imgClassName} src={profilePicUrl} alt=\"Profile pic\" />\r\n                </span>\r\n                <div className=\"friend-content\">\r\n                    <h2 className=\"friend-text-shadow\" >{`${firstName} ${lastName}`}</h2>\r\n                    <div className=\"friend-button-container\">\r\n                        {!firstButtonOnClick\r\n                            ? <button className=\"button update-info\" >\r\n                                <NavLink to={firstButtonLink}>{firstButtonText}</NavLink>\r\n                            </button>\r\n\r\n                            : <button\r\n                                className=\"button update-info\"\r\n                                onClick={firstButtonOnClick.bind(this, id)} >\r\n                                {firstButtonText}\r\n                            </button>\r\n                        }\r\n\r\n                        {!secondButtonOnClick\r\n                            ? <button className=\"button view-activity\">\r\n                                <NavLink to={secondButtonLink}> {secondButtonText} </NavLink>\r\n                            </button>\r\n\r\n                            : <button\r\n                                className=\"button view-activity\"\r\n                                onClick={secondButtonOnClick.bind(this, id)} >\r\n                                {secondButtonText}\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}