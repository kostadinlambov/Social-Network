{"version":3,"sources":["components/user/UserFriendsAllPage.js","components/user/Friend.js"],"names":["UserFriendsAllPage","props","_this","Object","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","removeFriend","friendToRemoveId","event","preventDefault","requestBody","loggedInUserId","id","console","log","requester","post","response","success","toast","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_common__WEBPACK_IMPORTED_MODULE_9__","successToast","text","message","position","POSITION","TOP_RIGHT","loadAllFriends","error","errorToast","catch","err","concat","status","localStorage","clear","history","push","state","friendsArr","userId","match","params","setState","_this2","getUserToShowId","isTheCurrentLoggedInUser","userService","getUserId","className","style","margin","length","map","friend","_Friend__WEBPACK_IMPORTED_MODULE_10__","assign","key","firstButtonLink","secondButtonLink","firstButtonText","secondButtonText","secondButtonOnClick","react__WEBPACK_IMPORTED_MODULE_5__","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","Component","Friend","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","render","ready","_this$state","firstName","lastName","firstButtonOnClick","backgroundImageUrl","default_background_image","profilePicUrl","placeholder_user_image","imgClassName","getImageSize","react__WEBPACK_IMPORTED_MODULE_7___default","backgroundImage","src","alt","onClick","bind","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","username","actionUser","C_Users_valch_Desktop_Social_Network_Project_App_Client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/7.3336d5a2.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { requester, userService } from '../../infrastructure'\r\nimport { toast } from 'react-toastify';\r\nimport { ToastComponent } from '../common'\r\nimport Friend from './Friend';\r\nimport './css/UserFriends.css'\r\n\r\n\r\nexport default class UserFriendsAllPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            friendsArr: this.props.friendsArr,\r\n            id: this.props.id,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userId = this.props.match.params.id;\r\n        this.setState({ id: userId });\r\n    }\r\n\r\n    removeFriend = (friendToRemoveId, event) => {\r\n        event.preventDefault();\r\n        const requestBody = { loggedInUserId: this.props.id, friendToRemoveId: friendToRemoveId }\r\n\r\n        console.log('requestBody: ', requestBody)\r\n\r\n        requester.post('/relationship/removeFriend', requestBody, (response) => {\r\n            console.log('RemoveFriend response: ', response)\r\n            debugger;\r\n            if (response.success) {\r\n                toast.success(<ToastComponent.successToast text={response.message} />, {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n\r\n                this.props.loadAllFriends(this.props.id);\r\n            } else {\r\n                debugger;\r\n                console.log('error message: ', response.message);\r\n                toast.error(<ToastComponent.errorToast text={response.message} />, {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            debugger;\r\n            console.error('Remove Friend err:', err)\r\n            toast.error(<ToastComponent.errorToast text={`Internal Server Error: ${err.message}`} />, {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n\r\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\r\n                localStorage.clear();\r\n                this.props.history.push('/login');\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.match.params.id !== this.props.id) {\r\n            this.props.getUserToShowId(this.props.match.params.id);\r\n        }\r\n\r\n        const isTheCurrentLoggedInUser = (this.props.id === userService.getUserId());\r\n\r\n        return (\r\n            <div className=\"container col-md-12 text-center\">\r\n                <h1 className=\"text-center font-weight-bold display-5\" style={{ 'margin': '1rem auto' }}>Friends </h1>\r\n                <hr className=\"my-2 mb-5 mt-3 col-md-12 mx-auto\" />\r\n                <section className=\"friend-section\" >\r\n                    {this.props.friendsArr.length > 0 ?\r\n                        this.props.friendsArr.map((friend) =>\r\n                            isTheCurrentLoggedInUser ?\r\n                                <Friend\r\n                                    key={friend.id}\r\n                                    {...this.props}\r\n                                    {...friend}\r\n                                    firstButtonLink={`/home/profile/${friend.id}`}\r\n                                    secondButtonLink={`/`}\r\n                                    firstButtonText={'VIEW PROFILE'}\r\n                                    secondButtonText={'REMOVE'}\r\n                                    secondButtonOnClick={this.removeFriend}\r\n                                />\r\n                                :\r\n                                <Friend\r\n                                    key={friend.id}\r\n                                    {...this.props}\r\n                                    {...friend}\r\n                                    firstButtonLink={`/home/profile/${friend.id}`}\r\n                                    secondButtonLink={`/`}\r\n                                    firstButtonText={'VIEW PROFILE'}\r\n                                    secondButtonText={'HOME'}\r\n                                />)\r\n                        :\r\n                        (<Fragment>\r\n                            <h2>You don't have any friends. Find some!</h2>\r\n                            {\r\n                                isTheCurrentLoggedInUser ?\r\n                                    (<button className=\"button view-activity\">\r\n                                        <NavLink to={`/home/findFriends/${this.props.id}/findFriends`}>FIND FRIENDS</NavLink>\r\n                                    </button>)\r\n                                    : null\r\n                            }\r\n                            <hr className=\"my-2 mb-5 mt-3 col-md-12 mx-auto\" />\r\n                        </Fragment>\r\n                        )\r\n                    }\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component, Redirect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { userService } from '../../infrastructure'\r\nimport default_background_image from '../../assets/images/default-background-image.jpg'\r\nimport placeholder_user_image from '../../assets/images/placeholder-profile-male.jpg'\r\n\r\nexport default class Friend extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            profilePicUrl: '',\r\n            backgroundImageUrl: '',\r\n            firstButtonText: '',\r\n            secondButtonText: '',\r\n            firstButtonLink: '',\r\n            secondButtonLink: '',\r\n            firstButtonOnClick: '',\r\n            secondButtonOnClick: '',\r\n            status: '',\r\n            actionUser: '',\r\n            ready: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ ...this.props, ready: true })\r\n    }\r\n\r\n    render = () => {\r\n        if (!this.state.ready) {\r\n            return null;\r\n        }\r\n\r\n        const { id, firstName, lastName, firstButtonText, secondButtonText, firstButtonLink, secondButtonLink,\r\n             firstButtonOnClick, secondButtonOnClick} = this.state;\r\n\r\n        const backgroundImageUrl = this.state.backgroundImageUrl || default_background_image\r\n        const profilePicUrl = this.state.profilePicUrl || placeholder_user_image\r\n\r\n        let imgClassName = '';\r\n        if (profilePicUrl) {\r\n            imgClassName = userService.getImageSize(profilePicUrl);\r\n        }\r\n        \r\n        return (\r\n            <div className=\"friend-container\" style={{ 'backgroundImage': `url(${backgroundImageUrl})` }}>\r\n                <span className=\"friend-img-container\">\r\n                    <img className={imgClassName} src={profilePicUrl} alt=\"Profile pic\" />\r\n                </span>\r\n                <div className=\"friend-content\">\r\n                    <h2 className=\"friend-text-shadow\" >{`${firstName} ${lastName}`}</h2>\r\n                    <div className=\"friend-button-container\">\r\n                        {!firstButtonOnClick\r\n                            ? <button className=\"button update-info\" >\r\n                                <NavLink to={firstButtonLink}>{firstButtonText}</NavLink>\r\n                            </button>\r\n\r\n                            : <button\r\n                                className=\"button update-info\"\r\n                                onClick={firstButtonOnClick.bind(this, id)} >\r\n                                {firstButtonText}\r\n                            </button>\r\n                        }\r\n\r\n                        {!secondButtonOnClick\r\n                            ? <button className=\"button view-activity\">\r\n                                <NavLink to={secondButtonLink}> {secondButtonText} </NavLink>\r\n                            </button>\r\n\r\n                            : <button\r\n                                className=\"button view-activity\"\r\n                                onClick={secondButtonOnClick.bind(this, id)} >\r\n                                {secondButtonText}\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}